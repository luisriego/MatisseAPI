{"version":1,"defects":{"Tests\\Domain\\Entity\\AccountTest::testAccountCreation":4,"Tests\\Domain\\Entity\\AccountTest::testDepositMoney":4,"Tests\\Domain\\Entity\\AccountTest::testDepositMoneyWithDifferentCurrencyThrowsException":4,"Tests\\Domain\\Entity\\AccountTest::testWithdrawMoneySuccessfully":4,"Tests\\Domain\\Entity\\AccountTest::testWithdrawMoneyWithDifferentCurrencyThrowsException":4,"Tests\\Domain\\Entity\\AccountTest::testWithdrawMoneyInsufficientFunds":4,"Tests\\Application\\Command\\CreateAccountCommandHandlerTest::testHandleCreatesAndSavesAccount":4,"Tests\\Adapter\\Framework\\Http\\Controller\\AccountControllerTest::testCreateAccountAndGetBalanceFlow":4,"Tests\\Adapter\\Framework\\Http\\Controller\\AccountControllerTest::testGetAccountBalanceForNonExistentAccount":4,"Tests\\Adapter\\Framework\\Http\\Controller\\AccountControllerTest::testCreateAccountWithInvalidCustomerId":4,"Tests\\Adapter\\Framework\\Http\\Controller\\AccountControllerTest::testDepositMoney":4,"Tests\\Adapter\\Framework\\Http\\Controller\\AccountControllerTest::testWithdrawMoneySuccessfully":4,"Tests\\Adapter\\Framework\\Http\\Controller\\AccountControllerTest::testWithdrawMoneyInsufficientFunds":4,"Tests\\Application\\Command\\IssueFeeToUnitCommandHandlerTest::testHandleSuccessWhenLedgerExists":4,"Tests\\Application\\Command\\IssueFeeToUnitCommandHandlerTest::testHandleSuccessCreatesLedgerIfNotExists":4,"Tests\\Application\\Command\\IssueFeeToUnitCommandHandlerTest::testHandleFeeItemNotFoundThrowsException":4,"Tests\\Application\\Command\\IssueFeeToUnitCommandHandlerTest::testHandleFeeItemDoesNotBelongToCondoThrowsException":4,"Tests\\Application\\Command\\ReceivePaymentFromUnitCommandHandlerTest::testHandleSuccess":4,"Tests\\Application\\Command\\ReceivePaymentFromUnitCommandHandlerTest::testHandleUnitLedgerAccountNotFoundThrowsException":4,"Tests\\Application\\Command\\ReceivePaymentFromUnitCommandHandlerTest::testHandleInvalidDateFormatThrowsException":4,"Tests\\Application\\Command\\RecordCondominiumExpenseCommandHandlerTest::testHandleSuccess":4,"Tests\\Application\\Command\\RecordCondominiumExpenseCommandHandlerTest::testHandleExpenseCategoryNotFoundThrowsException":4,"Tests\\Application\\Command\\RecordCondominiumExpenseCommandHandlerTest::testHandleExpenseCategoryDoesNotBelongToCondoThrowsException":4,"Tests\\Application\\Command\\RecordCondominiumExpenseCommandHandlerTest::testHandleInvalidDateFormatThrowsException":3,"Tests\\Application\\Query\\GetCondominiumFinancialSummaryQueryHandlerTest::testHandleSuccess":4,"Tests\\Application\\Query\\GetCondominiumFinancialSummaryQueryHandlerTest::testHandleSuccessWithNoData":4,"Tests\\Application\\Query\\GetUnitStatementQueryHandlerTest::testHandleSuccess":4,"Tests\\Adapter\\Framework\\Http\\Controller\\CondominiumControllerTest::testRegisterCondominiumAndGetDetails":4,"Tests\\Adapter\\Framework\\Http\\Controller\\CondominiumControllerTest::testRecordExpenseAndGetFinancialSummary":1,"Tests\\Adapter\\Framework\\Http\\Controller\\UnitControllerTest::testIssueFeeAndGetStatement":4,"Tests\\Infrastructure\\Persistence\\Postgres\\PostgresExpenseRepositoryTest::testSaveAndFindById":4,"Tests\\Infrastructure\\Persistence\\Postgres\\PostgresExpenseRepositoryTest::testFindByIdReturnsNullForNonExistentExpense":1,"Tests\\Infrastructure\\Persistence\\Postgres\\PostgresUnitLedgerAccountRepositoryTest::testSaveAndFindByUnitIdForNewAccount":4,"Tests\\Infrastructure\\Persistence\\Postgres\\PostgresUnitLedgerAccountRepositoryTest::testSaveAndFindByUnitIdWithMultipleEvents":1,"Tests\\Infrastructure\\Persistence\\Postgres\\PostgresUnitLedgerAccountRepositoryTest::testFindByUnitIdReturnsNullForNonExistentAccount":1,"Tests\\Infrastructure\\Projection\\ExpenseProjectorTest::testProjectExpenseRecordedEvent":4,"Tests\\Infrastructure\\Projection\\FeeProjectorTest::testProjectFeeAppliedEvent":4,"Tests\\Infrastructure\\Projection\\PaymentProjectorTest::testProjectPaymentReceivedEvent":4},"times":{"Tests\\Domain\\Entity\\AccountTest::testAccountCreation":0.02,"Tests\\Domain\\Entity\\AccountTest::testDepositMoney":0.001,"Tests\\Domain\\Entity\\AccountTest::testDepositMoneyWithDifferentCurrencyThrowsException":0.001,"Tests\\Domain\\Entity\\AccountTest::testWithdrawMoneySuccessfully":0,"Tests\\Domain\\Entity\\AccountTest::testWithdrawMoneyWithDifferentCurrencyThrowsException":0,"Tests\\Domain\\Entity\\AccountTest::testWithdrawMoneyInsufficientFunds":0.001,"Tests\\Domain\\ValueObject\\MoneyTest::testCreationAndGetters":0,"Tests\\Domain\\ValueObject\\MoneyTest::testAddition":0,"Tests\\Domain\\ValueObject\\MoneyTest::testAdditionWithDifferentCurrenciesThrowsException":0,"Tests\\Domain\\ValueObject\\MoneyTest::testSubtraction":0,"Tests\\Domain\\ValueObject\\MoneyTest::testSubtractionWithDifferentCurrenciesThrowsException":0,"Tests\\Domain\\ValueObject\\MoneyTest::testEquals":0,"Tests\\Domain\\ValueObject\\MoneyTest::testToStringMethod":0,"Tests\\Application\\Command\\CreateAccountCommandHandlerTest::testHandleCreatesAndSavesAccount":0.016,"Tests\\Adapter\\Framework\\Http\\Controller\\AccountControllerTest::testCreateAccountAndGetBalanceFlow":0.002,"Tests\\Adapter\\Framework\\Http\\Controller\\AccountControllerTest::testGetAccountBalanceForNonExistentAccount":0,"Tests\\Adapter\\Framework\\Http\\Controller\\AccountControllerTest::testCreateAccountWithInvalidCustomerId":0,"Tests\\Adapter\\Framework\\Http\\Controller\\AccountControllerTest::testDepositMoney":0,"Tests\\Adapter\\Framework\\Http\\Controller\\AccountControllerTest::testWithdrawMoneySuccessfully":0,"Tests\\Adapter\\Framework\\Http\\Controller\\AccountControllerTest::testWithdrawMoneyInsufficientFunds":0,"Tests\\Domain\\Entity\\ExpenseTest::testCreateNewExpenseRecordsEventAndSetsProperties":0.001,"Tests\\Domain\\Entity\\ExpenseTest::testReconstituteFromHistory":0.001,"Tests\\Domain\\Entity\\UnitLedgerAccountTest::testCreateNewAccount":0.001,"Tests\\Domain\\Entity\\UnitLedgerAccountTest::testApplyFee":0.001,"Tests\\Domain\\Entity\\UnitLedgerAccountTest::testReceivePayment":0.001,"Tests\\Domain\\Entity\\UnitLedgerAccountTest::testReconstitution":0,"Tests\\Application\\Command\\IssueFeeToUnitCommandHandlerTest::testHandleSuccessWhenLedgerExists":0.006,"Tests\\Application\\Command\\IssueFeeToUnitCommandHandlerTest::testHandleSuccessCreatesLedgerIfNotExists":0,"Tests\\Application\\Command\\IssueFeeToUnitCommandHandlerTest::testHandleUnitNotFoundThrowsException":0,"Tests\\Application\\Command\\IssueFeeToUnitCommandHandlerTest::testHandleFeeItemNotFoundThrowsException":0,"Tests\\Application\\Command\\IssueFeeToUnitCommandHandlerTest::testHandleFeeItemDoesNotBelongToCondoThrowsException":0,"Tests\\Application\\Command\\ReceivePaymentFromUnitCommandHandlerTest::testHandleSuccess":0.001,"Tests\\Application\\Command\\ReceivePaymentFromUnitCommandHandlerTest::testHandleUnitNotFoundThrowsException":0,"Tests\\Application\\Command\\ReceivePaymentFromUnitCommandHandlerTest::testHandleUnitLedgerAccountNotFoundThrowsException":0,"Tests\\Application\\Command\\ReceivePaymentFromUnitCommandHandlerTest::testHandleInvalidDateFormatThrowsException":0,"Tests\\Application\\Command\\RecordCondominiumExpenseCommandHandlerTest::testHandleSuccess":0.004,"Tests\\Application\\Command\\RecordCondominiumExpenseCommandHandlerTest::testHandleCondominiumNotFoundThrowsException":0,"Tests\\Application\\Command\\RecordCondominiumExpenseCommandHandlerTest::testHandleExpenseCategoryNotFoundThrowsException":0,"Tests\\Application\\Command\\RecordCondominiumExpenseCommandHandlerTest::testHandleExpenseCategoryDoesNotBelongToCondoThrowsException":0,"Tests\\Application\\Command\\RecordCondominiumExpenseCommandHandlerTest::testHandleInvalidDateFormatThrowsException":0,"Tests\\Application\\Query\\GetCondominiumFinancialSummaryQueryHandlerTest::testHandleSuccess":0.006,"Tests\\Application\\Query\\GetCondominiumFinancialSummaryQueryHandlerTest::testHandleSuccessWithNoData":0,"Tests\\Application\\Query\\GetUnitStatementQueryHandlerTest::testHandleSuccess":0.001,"Tests\\Application\\Query\\GetUnitStatementQueryHandlerTest::testHandleUnitLedgerNotFoundThrowsException":0,"Tests\\Adapter\\Framework\\Http\\Controller\\CondominiumControllerTest::testRegisterCondominiumAndGetDetails":0,"Tests\\Adapter\\Framework\\Http\\Controller\\CondominiumControllerTest::testRecordExpenseAndGetFinancialSummary":0,"Tests\\Adapter\\Framework\\Http\\Controller\\UnitControllerTest::testIssueFeeAndGetStatement":0,"Tests\\Infrastructure\\Persistence\\Postgres\\PostgresExpenseRepositoryTest::testSaveAndFindById":0,"Tests\\Infrastructure\\Persistence\\Postgres\\PostgresExpenseRepositoryTest::testFindByIdReturnsNullForNonExistentExpense":0,"Tests\\Infrastructure\\Persistence\\Postgres\\PostgresUnitLedgerAccountRepositoryTest::testSaveAndFindByUnitIdForNewAccount":0,"Tests\\Infrastructure\\Persistence\\Postgres\\PostgresUnitLedgerAccountRepositoryTest::testSaveAndFindByUnitIdWithMultipleEvents":0,"Tests\\Infrastructure\\Persistence\\Postgres\\PostgresUnitLedgerAccountRepositoryTest::testFindByUnitIdReturnsNullForNonExistentAccount":0,"Tests\\Infrastructure\\Projection\\ExpenseProjectorTest::testProjectExpenseRecordedEvent":0,"Tests\\Infrastructure\\Projection\\FeeProjectorTest::testProjectFeeAppliedEvent":0,"Tests\\Infrastructure\\Projection\\PaymentProjectorTest::testProjectPaymentReceivedEvent":0}}